summa = summa + i
}
}
print(summa)
summa = 0
for (i in 1:999) {
if (i %% 3 || i %% 5 ){
summa = summa + i
}
}
print(summa)
setwd("C:/Users/Tuukka/Desktop/IODS-project/data")
human_data <- read.csv("learnAnalysisdata.csv")
human_data <- read.csv("C:/Users/Tuukka/Desktop/IODS-project/data/learnAnalysisdata.csv")
library(plyr)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
head(hd)
#Dataset hd (Human Development Index) has 195 observations in eight variables.
#After rank, country and index value there variables that are used to calculate HDI-index
str(gii)
head(gii)
#Dataset gii (Gender Development Index) has 195 observations in ten variables. The logic seems to be same than in hd: there is index and variables
#that have been used to calculate index.
#################
#Renaming columns
hd <- rename(hd, replace = c("HDI.Rank"="rank", "Country"="country", "Human.Development.Index..HDI." = "hdi_index", "Life.Expectancy.at.Birth" = "life_exp",
"Expected.Years.of.Education" = "exp_edu_year", "Mean.Years.of.Education" = "mean_year_edu",
"Gross.National.Income..GNI..per.Capita" = "gni_pc", "GNI.per.Capita.Rank.Minus.HDI.Rank" = "gni_pc_min_hdi"))
gii <- rename(gii, replace = c("GII.Rank" = "rank", "Country"="country", "Gender.Inequality.Index..GII." = "gii_index",
"Maternal.Mortality.Ratio" = "mat_mor_ratio", "Adolescent.Birth.Rate" = "adol_birrate",
"Percent.Representation.in.Parliament" = "repr_parl", "Population.with.Secondary.Education..Female." = "sec_edu_fml",
"Population.with.Secondary.Education..Male." = "sec_edu_male", "Labour.Force.Participation.Rate..Female." = "lab_force_fml",
"Labour.Force.Participation.Rate..Male." = "lab_force_male"))
########
#Mutate
gii <- mutate(gii, gender_edu_ratio = sec_edu_fml / sec_edu_male)
gii <- mutate(gii, gender_lab_ratio = lab_force_fml / lab_force_male)
##################
#Joining data sets
human <- merge(gii, hd, by.x = "country", by.y = "country")
human <- rename(human, replace = c("rank.x" = "hdi_rank", "rank.y" = "rank_gii"))
setwd("C:/Users/Tuukka/Desktop/IODS-project/data")
write.csv(human, file="humandata.csv")
str_replace(human$gni_pc, pattern=",", replace ="") %>% as.numeric
library(plyr)
library(stringr)
library(tidyr)
str_replace(human$gni_pc, pattern=",", replace ="") %>% as.numeric
human$gni_pc <- str_replace(human$gni_pc, pattern=",", replace ="") %>% as.numeric
keep <- c("country", "gender_edu_ratio", "gender_lab_ratio", "life_exp", "exp_edu_year", "gni_pc", "mat_mor_ratio", "adol_birrate", "repr_parl")
human <- select(human, one_of(keep))
library(dplyr)
human <- select(human, one_of(keep))
data.frame(human[-1], comp = complete.cases(human))
human_ <- filter(human,complete.cases(human))
keep <- c("country", "gender_edu_ratio", "gender_lab_ratio", "life_exp", "exp_edu_year", "gni_pc", "mat_mor_ratio", "adol_birrate", "repr_parl")
human <- select(human, one_of(keep))
data.frame(human[-1], comp = complete.cases(human))
humanFilt <- filter(human,complete.cases(human))
print(humanFilt$country)
?filter
?dplyr::filter
?dplyr::select
?dplyr::filter
tmp <- filter(human,c("Suriname", "Uruguay"))
tmp <- select(human,c("Suriname", "Uruguay"))
tmp <- select(human,one_of(c("Suriname", "Uruguay")))
View(tmp)
tmp <- select(humanFilt,one_of(c("Suriname", "Uruguay")))
dplyr::mutate(humanFilt, isnotcountry = 1)
humanFilt <- dplyr::mutate(humanFilt, isnotcountry = 1)
humanFilt <- dplyr::mutate(humanFilt, isnotcountry = 0)
if (humanFilt$country == "World") humanFilt$isnotcountry = 1
if (humanFilt$country == "World") {humanFilt$isnotcountry = 1}
if (humanFilt$country == "World") {
humanFilt$isnotcountry = 1
}
View(humanFilt)
?subset
tmp <- subset(humanFilt, c("Mongolia", "Morocco"))
tmp <-  humanFilt[ ! humanFilt$country %in% c("Uruguay", "Morocco"), ]
tmp <-  humanFilt[ ! humanFilt$country %in% c("Uruguay", "Morocco", "Afganistan"), ]
tmp <-  humanFilt[ ! humanFilt$country %in% c("Uruguay", "Morocco", "Afganistan"), ]
tmp <-  humanFilt[ ! humanFilt$country %in% c("Uruguay", "Morocco", "Afganistan", "Albania"), ]
humanFilt$country
tmp <-  humanFilt[ ! humanFilt$country %in% c("East Asia and the Pacific", "Europe and Central Asia", "Latin America and the Caribbean", "Sub-Saharan Africa", "South Asia", "World", "Arab States",), ]
tmp <-  humanFilt[ ! humanFilt$country %in% c("East Asia and the Pacific", "Europe and Central Asia", "Latin America and the Caribbean", "Sub-Saharan Africa", "South Asia", "World", "Arab States"), ]
humanFilt <-  humanFilt[ ! humanFilt$country %in% c("East Asia and the Pacific", "Europe and Central Asia", "Latin America and the Caribbean", "Sub-Saharan Africa", "South Asia", "World", "Arab States"), ]
library(plyr)
library(stringr)
library(tidyr)
library(dplyr)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
head(hd)
#Dataset hd (Human Development Index) has 195 observations in eight variables.
#After rank, country and index value there variables that are used to calculate HDI-index
str(gii)
head(gii)
#Dataset gii (Gender Development Index) has 195 observations in ten variables. The logic seems to be same than in hd: there is index and variables
#that have been used to calculate index.
#################
#Renaming columns
hd <- rename(hd, replace = c("HDI.Rank"="rank", "Country"="country", "Human.Development.Index..HDI." = "hdi_index", "Life.Expectancy.at.Birth" = "life_exp",
"Expected.Years.of.Education" = "exp_edu_year", "Mean.Years.of.Education" = "mean_year_edu",
"Gross.National.Income..GNI..per.Capita" = "gni_pc", "GNI.per.Capita.Rank.Minus.HDI.Rank" = "gni_pc_min_hdi"))
gii <- rename(gii, replace = c("GII.Rank" = "rank", "Country"="country", "Gender.Inequality.Index..GII." = "gii_index",
"Maternal.Mortality.Ratio" = "mat_mor_ratio", "Adolescent.Birth.Rate" = "adol_birrate",
"Percent.Representation.in.Parliament" = "repr_parl", "Population.with.Secondary.Education..Female." = "sec_edu_fml",
"Population.with.Secondary.Education..Male." = "sec_edu_male", "Labour.Force.Participation.Rate..Female." = "lab_force_fml",
"Labour.Force.Participation.Rate..Male." = "lab_force_male"))
########
#Mutate
gii <- mutate(gii, gender_edu_ratio = sec_edu_fml / sec_edu_male)
gii <- mutate(gii, gender_lab_ratio = lab_force_fml / lab_force_male)
##################
#Joining data sets
human <- merge(gii, hd, by.x = "country", by.y = "country")
human <- rename(human, replace = c("rank.x" = "hdi_rank", "rank.y" = "rank_gii"))
####################
#String manipulation
human$gni_pc <- str_replace(human$gni_pc, pattern=",", replace ="") %>% as.numeric
####################
#Reducing amount of variables and filter out rows with empty values
keep <- c("country", "gender_edu_ratio", "gender_lab_ratio", "life_exp", "exp_edu_year", "gni_pc", "mat_mor_ratio", "adol_birrate", "repr_parl")
human <- select(human, one_of(keep))
data.frame(human[-1], comp = complete.cases(human))
humanFilt <- filter(human,complete.cases(human))
#################################################
#Find and filter out cases that are not countries
humanFilt <-  humanFilt[ ! humanFilt$country %in% c("East Asia and the Pacific", "Europe and Central Asia", "Latin America and the Caribbean", "Sub-Saharan Africa", "South Asia", "World", "Arab States"), ]
############
#Saving file
setwd("C:/Users/Tuukka/Desktop/IODS-project/data")
write.csv(human, file="humandata.csv")
rownames(humanFilt) <- humanFilt$country
humanFilt <- select(humanFilt, -country)
library(plyr)
library(stringr)
library(tidyr)
library(dplyr)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
head(hd)
#Dataset hd (Human Development Index) has 195 observations in eight variables.
#After rank, country and index value there variables that are used to calculate HDI-index
str(gii)
head(gii)
#Dataset gii (Gender Development Index) has 195 observations in ten variables. The logic seems to be same than in hd: there is index and variables
#that have been used to calculate index.
#################
#Renaming columns
hd <- rename(hd, replace = c("HDI.Rank"="rank", "Country"="country", "Human.Development.Index..HDI." = "hdi_index", "Life.Expectancy.at.Birth" = "life_exp",
"Expected.Years.of.Education" = "exp_edu_year", "Mean.Years.of.Education" = "mean_year_edu",
"Gross.National.Income..GNI..per.Capita" = "gni_pc", "GNI.per.Capita.Rank.Minus.HDI.Rank" = "gni_pc_min_hdi"))
gii <- rename(gii, replace = c("GII.Rank" = "rank", "Country"="country", "Gender.Inequality.Index..GII." = "gii_index",
"Maternal.Mortality.Ratio" = "mat_mor_ratio", "Adolescent.Birth.Rate" = "adol_birrate",
"Percent.Representation.in.Parliament" = "repr_parl", "Population.with.Secondary.Education..Female." = "sec_edu_fml",
"Population.with.Secondary.Education..Male." = "sec_edu_male", "Labour.Force.Participation.Rate..Female." = "lab_force_fml",
"Labour.Force.Participation.Rate..Male." = "lab_force_male"))
########
#Mutate
gii <- mutate(gii, gender_edu_ratio = sec_edu_fml / sec_edu_male)
gii <- mutate(gii, gender_lab_ratio = lab_force_fml / lab_force_male)
##################
#Joining data sets
human <- merge(gii, hd, by.x = "country", by.y = "country")
human <- rename(human, replace = c("rank.x" = "hdi_rank", "rank.y" = "rank_gii"))
####################
#String manipulation
human$gni_pc <- str_replace(human$gni_pc, pattern=",", replace ="") %>% as.numeric
####################
#Reducing amount of variables and filter out rows with empty values
keep <- c("country", "gender_edu_ratio", "gender_lab_ratio", "life_exp", "exp_edu_year", "gni_pc", "mat_mor_ratio", "adol_birrate", "repr_parl")
human <- select(human, one_of(keep))
data.frame(human[-1], comp = complete.cases(human))
humanFilt <- filter(human,complete.cases(human))
#################################################
#Find and filter out cases that are not countries
humanFilt <-  humanFilt[ ! humanFilt$country %in% c("East Asia and the Pacific", "Europe and Central Asia", "Latin America and the Caribbean", "Sub-Saharan Africa", "South Asia", "World", "Arab States"), ]
################
#Define rownames
rownames(humanFilt) <- humanFilt$country
humanFilt <- select(humanFilt, -country)
############
#Saving file
setwd("C:/Users/Tuukka/Desktop/IODS-project/data")
write.csv(human, file="humandata.csv")
human_data <- read.csv("C:/Users/Tuukka/Desktop/IODS-project/data/humandata.csv")
human_data <- read.csv("C:/Users/Tuukka/Desktop/IODS-project/data/humandata.csv")
library(plyr)
library(stringr)
library(tidyr)
library(dplyr)
hd <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/human_development.csv", stringsAsFactors = F)
gii <- read.csv("http://s3.amazonaws.com/assets.datacamp.com/production/course_2218/datasets/gender_inequality.csv", stringsAsFactors = F, na.strings = "..")
str(hd)
head(hd)
#Dataset hd (Human Development Index) has 195 observations in eight variables.
#After rank, country and index value there variables that are used to calculate HDI-index
str(gii)
head(gii)
#Dataset gii (Gender Development Index) has 195 observations in ten variables. The logic seems to be same than in hd: there is index and variables
#that have been used to calculate index.
#################
#Renaming columns
hd <- rename(hd, replace = c("HDI.Rank"="rank", "Country"="country", "Human.Development.Index..HDI." = "hdi_index", "Life.Expectancy.at.Birth" = "life_exp",
"Expected.Years.of.Education" = "exp_edu_year", "Mean.Years.of.Education" = "mean_year_edu",
"Gross.National.Income..GNI..per.Capita" = "gni_pc", "GNI.per.Capita.Rank.Minus.HDI.Rank" = "gni_pc_min_hdi"))
gii <- rename(gii, replace = c("GII.Rank" = "rank", "Country"="country", "Gender.Inequality.Index..GII." = "gii_index",
"Maternal.Mortality.Ratio" = "mat_mor_ratio", "Adolescent.Birth.Rate" = "adol_birrate",
"Percent.Representation.in.Parliament" = "repr_parl", "Population.with.Secondary.Education..Female." = "sec_edu_fml",
"Population.with.Secondary.Education..Male." = "sec_edu_male", "Labour.Force.Participation.Rate..Female." = "lab_force_fml",
"Labour.Force.Participation.Rate..Male." = "lab_force_male"))
########
#Mutate
gii <- mutate(gii, gender_edu_ratio = sec_edu_fml / sec_edu_male)
gii <- mutate(gii, gender_lab_ratio = lab_force_fml / lab_force_male)
##################
#Joining data sets
human <- merge(gii, hd, by.x = "country", by.y = "country")
human <- rename(human, replace = c("rank.x" = "hdi_rank", "rank.y" = "rank_gii"))
####################
#String manipulation
human$gni_pc <- str_replace(human$gni_pc, pattern=",", replace ="") %>% as.numeric
####################
#Reducing amount of variables and filter out rows with empty values
keep <- c("country", "gender_edu_ratio", "gender_lab_ratio", "life_exp", "exp_edu_year", "gni_pc", "mat_mor_ratio", "adol_birrate", "repr_parl")
human <- select(human, one_of(keep))
data.frame(human[-1], comp = complete.cases(human))
humanFilt <- filter(human,complete.cases(human))
#################################################
#Find and filter out cases that are not countries
humanFilt <-  humanFilt[ ! humanFilt$country %in% c("East Asia and the Pacific", "Europe and Central Asia", "Latin America and the Caribbean", "Sub-Saharan Africa", "South Asia", "World", "Arab States"), ]
################
#Define rownames
rownames(humanFilt) <- humanFilt$country
humanFilt <- select(humanFilt, -country)
############
#Saving file
setwd("C:/Users/Tuukka/Desktop/IODS-project/data")
write.csv(humanFilt, file="humandata.csv")
human_data <- read.csv("C:/Users/Tuukka/Desktop/IODS-project/data/humandata.csv")
summary(human_data)
head(human_data)
str(human_data)
summary(human_data)
head(human_data)
str(human_data)
pairs(human_data)
corrplot(cor(human_data), method="circle", type="lower", cl.pos = "r", tl.pos = "d", tl.cex = 0.6, tl.col="black")
library(MASS)
library(corrplot)
library(tidyverse)
library(tidyr)
library(dplyr)
library(plyr)
summary(human_data)
str(human_data)
corrplot(cor(human_data), method="circle", type="lower", cl.pos = "r", tl.pos = "d", tl.cex = 0.6, tl.col="black")
human_data <- read.csv("C:/Users/Tuukka/Desktop/IODS-project/data/humandata.csv")
cor_matrix<-cor(human_data)
?cor
tmp <- select(humanFilt, -X)
tmp <- select(humanFilt, -"X")
tmp <- select(humanFilt, -X)
tmp <- select(human_data, -X)
tmp <- human_data[c(2:9)]
p
human_data <- read.csv("C:/Users/Tuukka/Desktop/IODS-project/data/humandata.csv")
tmpData <- human_data[c(2:9)]
cor_matrix<-cor(tmpData)
summary(human_data)
str(human_data)
corrplot(cor_matrix, method="circle", type="lower", cl.pos = "r", tl.pos = "d", tl.cex = 0.6, tl.col="black")
summary(human_data)
str(human_data)
corrplot(cor_matrix, method="circle", type="lower", cl.pos = "r", tl.pos = "d", tl.cex = 0.6, tl.col="black")
ggpairs(human_data)
library(MASS)
library(corrplot)
library(tidyverse)
library(tidyr)
library(dplyr)
library(plyr)
library(GGally)
library(MASS)
library(corrplot)
library(tidyverse)
library(tidyr)
library(dplyr)
library(plyr)
library(GGally)
summary(human_data)
str(human_data)
corrplot(cor_matrix, method="circle", type="lower", cl.pos = "r", tl.pos = "d", tl.cex = 0.6, tl.col="black")
ggpairs(human_data)
ggpairs(tmp)
ggpairs(tmpData)
summa = 0
for (i in 1:999) {
if (i %% 3 || i %% 15){
summa = summa + i
}
}
print(summa)
summa = 0
for (i in 1:999) {
if (i %% 3 || i %% 5){
summa = summa + i
}
}
print(summa)
summa = 0
for (i in 1:9) {
if (i %% 3 || i %% 5){
summa = summa + i
}
}
print(summa)
summa = 0
for (i in 1:9) {
if (i %% 3 == 0 || i %% 5 == 0){
summa = summa + i
}
}
print(summa)
summa = 0
for (i in 1:999) {
if (i %% 3 == 0 || i %% 5 == 0){
summa = summa + i
}
}
print(summa)
summa = 0
luku1 = 1
luku2 = 1
while (luku2 < 4000000) {
summa = summa + luku2
luku2 = luku2+1
}
print(summa)
summa = 0
luku1 = 1
luku2 = 1
while (luku2 < 4000000) {
summa = summa + luku2
luku2 = luku2 + 10000
}
print(summa)
summa = 0
luku1 = 1
luku2 = 1
lukutmp = 0
while (luku2 < 4000000) {
lukutmp = luku1 + luku2
if (lukutmp %% 2 == 0) {
summa = summa + luku2
}
luku1 = luku2
luku2 = lukutmp
}
print(summa)
while (luku2 < 4000000) {
lukutmp = luku1 + luku2
if (lukutmp %% 2 == 0) {
summa = summa + luku2
}
print(lukutmp)
luku1 = luku2
luku2 = lukutmp
}
print(summa)
while (luku2 < 4000000) {
lukutmp = luku1 + luku2
if (lukutmp %% 2 == 0) {
summa = summa + luku2
}
print(lukutmp)
luku1 = luku2
luku2 = lukutmp
}
print(summa)
while (luku2 < 4000000) {
lukutmp = luku1 + luku2
if (lukutmp %% 2 == 0) {
summa = summa + luku2
}
print(lukutmp)
luku1 = luku2
luku2 = lukutmp
}
print(summa)
summa = 0
luku1 = 1
luku2 = 1
while (luku2 < 4000000) {
lukutmp = luku1 + luku2
if (lukutmp %% 2 == 0) {
summa = summa + luku2
}
luku1 = luku2
luku2 = lukutmp
}
print(summa)
summa = 0
luku1 = 1
luku2 = 1
while (luku2 <= 4000000) {
lukutmp = luku1 + luku2
if (lukutmp %% 2 == 0) {
summa = summa + luku2
}
luku1 = luku2
luku2 = lukutmp
}
print(summa)
summa = 0
luku1 = 1
luku2 = 1
while (luku2 <= 4000000) {
lukutmp = luku1 + luku2
if (lukutmp %% 2 == 0) {
summa = summa + lukutmp
}
luku1 = luku2
luku2 = lukutmp
}
print(summa)
fun <- function(n) {
i <- 1
while (TRUE) {
if (i>n) return("stopped") else print(i)
i <- i+1
}
}
fun(4)
i <- 1
while (TRUE) {
if (i>4) return("stopped") else print(i)
i <- i+1
}
while (lopettaja == 0) {
print(2)
print(3)
lopettaja = 1
}
lopettaja = 0
while (lopettaja == 0) {
print(2)
print(3)
lopettaja = 1
}
while (lopettaja == 0) {
print(2)
print(3)
}
kk
lopettaja = 0
while (lopettaja == 0) {
print(2)
print(3)
}
kohde = 600851475143 #Tulos 71 × 839 × 1471 × 6857
lopettaja = 0
jakaja = 2
while (lopettaja == 0) {
if (kohde %% jakaja == 0) {
lopettaja = 1
} else {
print(jakaja)
jakaja = jakaja + 1
}
}
#Prime factor
kohde = 600851475143 #Tulos 71 × 839 × 1471 × 6857
lopettaja = 0
jakaja = 2
while (lopettaja == 0) {
if (kohde %% jakaja == 0) {
print(kohde/jakaja)
lopettaja = 1
} else {
jakaja = jakaja + 1
}
}
600851475143 / 8462696833
600851475143 / 71
8462696833 / 839
10086647 / 1471
kohde = 600851475143 #Tulos 71 × 839 × 1471 × 6857
jakaja = 2
while (kohde > 1) {
if (kohde %% jakaja == 0) {
kohde = kohde/jakaja
}
jakaja = jakaja + 1
}
print(jakaja)
kohde = 600851475143 #Tulos 71 × 839 × 1471 × 6857
jakaja = 2
while (kohde > 1) {
jakaja = jakaja + 1
if (kohde %% jakaja == 0) {
kohde = kohde/jakaja
}
}
print(jakaja)
